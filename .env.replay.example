# The RPC endpoint of the source EVM chain, i.e. the chain where the proofs will be gotten from.
EVM_SOURCE_RPC=

# The BlobstreamX contract address in the source EVM chain. This contract will be used to
# read the proofs from.
EVM_SOURCE_CONTRACT_ADDRESS=

# The RPC endpoint of the target EVM chain, i.e. the chain where the proofs will be submitted to.
EVM_TARGET_RPC=

# The BlobstreamX contract address in the target EVM chain. This contract will receive the proofs
# from the source contract.
EVM_TARGET_CONTRACT_ADDRESS=

# The Succinct Gateway contract address in the target EVM chain. This contract will be responsible
# for verifying the proofs before they're committed to in the target BlobstreamX contract.
EVM_TARGET_GATEWAY=

# The private key of your EVM account in hex format. The corresponding account should be funded
# because it will be used to submit the transactions containing the proofs.
EVM_PRIVATE_KEY=

# Is the range of the filter to use when querying for events in the source EVM chain.
# If you run the replay mechanism and the RPC provider complains that the filter range is
# too wide, please set a lower value depending on your RPC provider.
EVM_FILTER_RANGE=

# The function ID of the header range circuit verifier. It is the digest returned from
# the Succinct Gateway when you register the verifier of the header range circuit.
CIRCUITS_HEADER_RANGE_FUNCTIONID=


# The function ID of the next header circuit verifier. It is the digest returned from
# the Succinct Gateway when you register the verifier of the next header circuit.
CIRCUITS_NEXT_HEADER_FUNCTIONID=

# Set it to true to validate the data root tuple roots before submitting their corresponding
# proofs to the target chain. If set to true, it requires the CORE_RPC variable to be set
# to a Celestia consensus network RPC endpoint.
VERIFY=false

# The endpoint of the Celestia consensus network RPC endpoint. Should be set if the VERIFY
# is set to true.
CORE_RPC=

# The logging level. Accepted values: trace|debug|info|warn|error|fatal|panic.
LOG_LEVEL=

# The logging format. Accepted values: json|plain.
LOG_FORMAT=
